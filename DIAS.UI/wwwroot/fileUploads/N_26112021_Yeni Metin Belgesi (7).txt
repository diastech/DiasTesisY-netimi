@(Html.DevExtreme().Form()
        .ID("ticketForm")
        .ShowColonAfterLabel(false)
        .LabelLocation(FormLabelLocation.Left)
        .Items(items => {
        items.AddSimple().Label(l => l.Text("Sebep").Visible(false)).Editor(e=>e.DropDownBox()
        .ID("dropDownReasonSingle")
        .DataSource(d => d.RemoteController()
        .Key("HierarchyId")
        .LoadUrl(Url.Page(null, "TicketReasonData")))
        .DeferRendering(false)
        .ValueExpr("HierarchyId")
        .DisplayExpr("CategoryName")
        .DropDownOptions(o => o.Height(350))
        .Placeholder("Arama sebebi seçiniz..")
        .ShowClearButton(true)
        .OnValueChanged("Reason.treeBox_valueChanged")
        .ContentTemplate(new TemplateName("reasonTreeViewSingleTemplate")))
        .ValidationRules(v => {
            v.AddRequired().Message("Arama sebebi boş geçilemez.");
        });

        items.AddSimple().Label(l => l.Text("Mahal").Visible(false)).Editor(e => e.DropDownBox()
            .ID("dropDownLocation")
            .DataSource(d => d.RemoteController()
            .Key("HierarchyId")
            .LoadUrl(Url.Page(null, "LocationData"))
            .LoadMode(DataSourceLoadMode.Raw))
            .DeferRendering(false)
            .ValueExpr("HierarchyId")
            .DisplayExpr("LocationName")
            .DropDownOptions(o => o.Height(350))
            .Placeholder("Lokasyon Seçiniz..")
            .ShowClearButton(true)
            .OnValueChanged("Location.treeBox_valueChanged")
            .ContentTemplate(new TemplateName("locationTreeViewMultipleTemplate")))
        .ValidationRules(v =>
        {
            v.AddRequired().Message("Arama sebebi boş geçilemez.");
        });

        items.AddSimple().Label(l => l.Text("Öncelik").Visible(false))
            .Editor(e => e.SelectBox()
            .ID("sbTicketPriority")
            .DataSource(Html.GetEnumSelectList<PriorityEnum>()
            .Select(i => new { Value = int.Parse(i.Value), Text = i.Text }))
            .DisplayExpr("Text")
            .Placeholder("Öncelik seçiniz.")
            .ValueExpr("Value")).ValidationRules(v => {
                    v.AddRequired().Message("Öncelik boş geçilemez.");
                });

        items.AddSimple().Label(l => l.Text("Ticket Sahibi").Visible(false))
            .Editor(e => e.SelectBox()
            .ID("ticketUserId")
            .DataSource(d => d.RemoteController()
            .Key("Id")
            .LoadUrl(Url.Page(null, "UserData")))
            .DeferRendering(false)
            .ValueExpr("Id")
            .DisplayExpr(new JS("Shared.sbTicketUserDiplayExpr"))
            .ShowClearButton(true)
            .SearchEnabled(true)
            .Placeholder("Bildiren kişi seçiniz.")
            .SearchExpr("FirstName", "LastName", "UserName", "Email")).ValidationRules(v => {
                    v.AddRequired().Message("Bildiren kişi boş geçilemez.");
                });

        items.AddSimple().Label(l => l.Text("Sorumlu Grup").Visible(false)).Editor(e=>e.SelectBox()
            .ID("sbAsgGroup")
            .DataSource(d => d.RemoteController().CacheRawData(false)
            .Key("id")
            .LoadUrl(Url.Page(null, "TicketAssignmentGroupData"))
            .LoadMode(DataSourceLoadMode.Raw))
            .DeferRendering(false)
            .ValueExpr("Id")
            .DisplayExpr(new JS("Shared.sbTicketUserDiplayExpr"))
            .ShowClearButton(true)
            .SearchEnabled(true)
            .Placeholder("Atama Grubu Seçiniz..")
            .SearchExpr("FirstName", "LastName", "UserName", "Email"))
                .ValidationRules(v => {
                    v.AddRequired().Message("Sorumlu Grup bilgisi boş geçilemez.");
                });

            items.AddSimple().Label(l => l.Text("Sorumlu Kişi").Visible(false)).Editor(e=>e.SelectBox()
            .ID("sbAsgGroupEmp")
            .DataSource(d => d.RemoteController()
            .Key("Id")
            .LoadUrl(Url.Page(null, "UserData")))
            .DeferRendering(false)
            .ValueExpr("Id")
            .DisplayExpr(new JS("Shared.sbTicketUserDiplayExpr"))
            .ShowClearButton(true)
            .SearchEnabled(true)
            .Placeholder("Sorumlu kişi seçiniz.")
            .SearchExpr("FirstName", "LastName", "UserName", "Email"))
                .ValidationRules(v => {
                    v.AddRequired().Message("Sorumlu Kişi bilgisi boş geçilemez.");
                });
            items.AddSimple().Label(l => l.Text("Tarih").Visible(false))
                .Editor(e => e.DateBox().ID("dateTicket")
                    .ShowClearButton(true)
                    .Type(DateBoxType.DateTime)
                    .DisplayFormat("dd/MM/yyyy HH:mm:ss")
                    .Placeholder("Tarih seçiniz.")).ValidationRules(v => {
                v.AddRequired().Message("Tarih boş geçilemez.");
            });
            items.AddSimple().Label(l => l.Text("Açıklama").Visible(false)).Editor(e => e.TextArea().ID("textAreaDescription")
                .Placeholder("Açıklama giriniz...").Height(150)).ValidationRules(v => {
                    v.AddRequired().Message("Bu alan boş geçilemez.");
                    v.AddStringLength().Min(5).Message("Minimum 5 karakter girmelisiniz.");
                }
            );
            items.AddButton()
                .ButtonOptions(a => a.Text("Kaydet")
                .Icon("fas fa-save")
                .Type(ButtonType.Success)
                .OnClick("FastTicketsRedirect.saveTicket")
                .UseSubmitBehavior(true)
                .Width(150)
                .Hint("Kaydet"))
                .HorizontalAlignment(HorizontalAlignment.Right);
            })
     )